openapi: 3.0.0
info:
  title: Task Management API
  description: An API for managing tasks
  version: 1.0.0
servers:
  - url: http://localhost:3000
paths:
  /tasks:
    get:
      summary: Get all tasks
      description: Returns a list of all tasks.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '403':
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a new task
      description: Creates a new task with the provided details.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTask'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '422':
          description: Unprocessable Entity
    /{id}:
      get:
        summary: Get a specific task
        description: Returns details of a specific task identified by its ID.
        parameters:
          - name: id
            in: path
            description: ID of the task
            required: true
            schema:
              type: integer
              format: int64
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Task'
          '401':
            description: Not logged in
          '404':
            description: Task not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
      put:
        summary: Update a specific task
        description: Updates the details of a specific task identified by its ID.
        parameters:
          - name: id
            in: path
            description: ID of the task
            required: true
            schema:
              type: integer
              format: int64
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTask'
        responses:
          '201':
            description: Updated
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Task'
          '401':
            description: Not logged in
          '404':
            description: Task not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
      delete:
        summary: Delete a specific task
        description: Deletes a specific task identified by its ID.
        parameters:
          - name: id
            in: path
            description: ID of the task
            required: true
            schema:
              type: integer
              format: int64
        responses:
          '204':
            description: No Content
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Task'
          '401':
            description: Not logged in
          '404':
            description: Task not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  /login:
    post:
      summary: Log in
      description: Authenticates the user with the provided credentials and logs them in.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginCredentials'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
        '401':
          description: Invalid Credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /verify:
    get:
      summary: Verify authentication
      description: Verifies if the user is authenticated.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
        '401':
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /logout:
    delete:
      summary: Log out
      description: Logs out the currently logged-in user.
      responses:
        '204':
          description: No Content
        '401':
          description: Not logged in
components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        due:
          type: string
          format: date
        done:
          type: boolean
    NewTask:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        due:
          type: string
          format: date
    UpdateTask:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        due:
          type: string
          format: date
    LoginCredentials:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    Error:
      type: object
      properties:
        error:
          type: string
